#!/usr/bin/env perl -wT

#########
# Author:        dj3
# Created:       2010-05-17
#

use strict;
use warnings;
use Carp;
use English qw(-no_match_vars);
use HTTP::Request;
use LWP::UserAgent;
use CGI qw/:standard/;
use URI;
use Readonly;

Readonly::Scalar my $INTERNAL_SERVER_ERROR => 500;
Readonly::Scalar my $FORBIDDEN             => 403;

my $requested_url = param('url');
my $u = URI->new($requested_url);
eval {
    if (!$requested_url) {
        croak q[url parameter is missing in the request];
    }
    if( ! ($u->scheme eq 'http' and $u->host =~
      /\A(?:dev\.)?psd(?:-[a-z]+\.internal)?\.sanger\.ac\.uk\z/smix)) {
        croak qq[Cannot proxy to $requested_url];
    }
    1;
} or do {
    print header(-status => ($EVAL_ERROR=~/Cannot/smix ? $FORBIDDEN : $INTERNAL_SERVER_ERROR ), -type => q[text/xml]) or croak "Error printing: $ERRNO";
    print q[<xml><error>] . $EVAL_ERROR . q[</error></xml>] or croak "Error printing: $ERRNO";
    exit 0;
};

my $request = HTTP::Request->new( GET  => $requested_url);
my $ua = LWP::UserAgent->new();
$ua->agent(q[NPG_INTERACTIVE_TRACKING_REFLECTOR]);
my $response = $ua->request($request);
print header(-status => $response->code, -type => $response->header('Content-Type')) or croak "Error printing: $ERRNO";
print $response->content or croak "Error printing: $ERRNO";

exit 0;

